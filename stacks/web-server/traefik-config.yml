
#------------------------------------------------------------------------
# static configuration of the Traefik reverse proxy / load balancer
#------------------------------------------------------------------------
# these settings apply to Traefik itself
# dynamic settings for specific services are set in deploy labels in <stack>.yml
#------------------------------------------------------------------------

# get our service/container data from Docker socket-proxy
providers:
    docker:
        endpoint: "tcp://socket-proxy:2375"
        
        # containers that don't have a traefik.enable=true label will be ignored
        # TODO: could also demand they have a specific label if needing >1 Traefik?
        exposedByDefault: false
        
        # all containers routed to by Traefik are on the server network (unless overridden)
        network: public-server

        # enable Docker Swarm (Traefik looks for services instead of containers)
        swarmMode: true

# accept initial request on http or https, but _always_ redirct http to https
# "a convenience to enable (permanent) redirecting of all incoming requests"
entryPoints:
    # NB: "http" in the next line is a label/name, not a protocol per se
    http:
        address: :80
        http:
            redirections:
                entryPoint:
                    to: https
                    scheme: https
    https:
        address: :443

# create a Let's Encrypt TLS certificate resolver to allow Traefik to act as TLS endpoint
certificatesResolvers:
    lets-encrypt:
        acme:
            #========================================================
            # TODO: change this as needed
            email: wilsonte@umich.edu            
            #========================================================
            storage: /certificates/acme.json
            tlsChallenge: {}
            caServer: https://acme-v02.api.letsencrypt.org/directory
            #caServer: https://acme-staging-v02.api.letsencrypt.org/directory

# send traefik logs to a file for debugging
# TODO: more extensive access logging, etc.
log:
    filePath: "/traefik.log"
    level: "ERROR"
    
